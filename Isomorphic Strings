/*Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.

Note:
You may assume both s and t have the same length.*/

public class Solution {
    public boolean isIsomorphic(String s, String t) {
        Map sMap = new HashMap();
        Map tMap = new HashMap();
        //if(s.length() > 1){
        for(int i = 0; i < s.length(); i++){
            if(!sMap.containsKey(s.charAt(i))){
                sMap.put(s.charAt(i), t.charAt(i));
            }else if(!sMap.get(s.charAt(i)).equals(t.charAt(i))){       //use the method get(key).equals()
                return false;
            }
        }
        for(int i = 0; i < t.length(); i++){
            if(!tMap.containsKey(t.charAt(i))){
                tMap.put(t.charAt(i), s.charAt(i));
            }
        }
        if(sMap.size() != tMap.size()){
            return false;
        }else{
            return true;
        }
    }
}
