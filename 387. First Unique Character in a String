/*Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.*/

public class Solution {
    public int firstUniqChar(String s) {
        int[] times = new int[26];
        for(int i = 0; i < s.length(); i++) {
            times[s.charAt(i)-'a']++;
        }
        for(int i = 0; i < s.length(); i++) {
            if(times[s.charAt(i) - 'a'] == 1) {
                return i;
            }
        }
        return -1;
    }
}

//tranverse the string, record the occurrece times of each letter in the array(with index from 0 to 25, equals to each letter *-'a')
//tranverse the string again, find the first letter whose value in the array is 1
