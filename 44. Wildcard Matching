'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "*") → true
isMatch("aa", "a*") → true
isMatch("ab", "?*") → true
isMatch("aab", "c*a*b") → false


public class Solution {
    public boolean isMatch(String word1, String word2) {
        boolean[][] dp = new boolean[word1.length()+1][word2.length()+1];
        dp[0][0] = true;
        for(int j = 1; j <= word2.length(); j++) {
            if (word2.charAt(j-1) == '*') {
            dp[0][j] = dp[0][j-1];
        }
        }
        for (int i = 1;i <= word1.length(); i++) {
		    for (int j = 1; j<= word2.length(); j++) {
		        if(word2.charAt(j-1) != '*') {
		            dp[i][j] = dp[i-1][j-1] & (word1.charAt(i-1) == word2.charAt(j-1) | word2.charAt(j-1) == '?');
		        } else {
		            dp[i][j] = dp[i][j-1] | dp[i-1][j];
		        }
		    }
        }
        return dp[word1.length()][word2.length()];
    }
}
