/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode current1 = headA;
        ListNode current2 = headB;
        int sizeA = 0;
        int sizeB = 0;
        while(current1 != null){
            current1 = current1.next;
            sizeA++;
        }
        while(current2 != null){
            current2 = current2.next;
            sizeB++;
        }
        current1 = headA;
        current2 = headB;
        if(sizeA > sizeB){
            while(sizeA != sizeB){
                current1 = current1.next;
                sizeA--;
            }
        }else if(sizeA < sizeB){
            while(sizeA != sizeB){
                current2 = current2.next;
                sizeB--;
            }
        }
        while(current1 != current2){
            current1 = current1.next;
            current2 = current2.next;
        }
        return current1;
    }
}

// compute the size of each list first
