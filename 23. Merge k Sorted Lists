/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    private Comparator<ListNode> com = new Comparator<ListNode>(){
        public int compare(ListNode node1, ListNode node2) {
            return node1.val - node2.val;
        }
    };
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode dummy = new ListNode(0);
        ListNode curr = dummy;
        Queue<ListNode> heap = new PriorityQueue(com);
        for(ListNode node: lists) {
            if(node != null) {
                heap.add(node);
            }
        }
        while(heap.size() > 0) {
            ListNode node = heap.poll();
            if(node.next != null) {
                heap.add(node.next);
            }
            curr.next = node;
            curr = curr.next;
        }
        return dummy.next;
    }
}
