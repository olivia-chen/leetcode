// O(n) way
public class Solution {
    public int findMin(int[] nums) {
        for(int i = 0; i < nums.length-1; i++){
            if(nums[i+1] < nums[i]){
                return nums[i+1];
            }
        }
        return nums[0];
    }
}

//O(lgn) way : Binary Search
public class Solution {
    public int findMin(int[] nums) {
        int low = 0;
        int high = nums.length-1;
        int mid = (low + high) / 2;
        while(nums[low] > nums[high]){
            if(nums[mid] > nums[high]){
                low = mid;
            }else{
                high = mid;
            }
            mid = (low + high) / 2;
            if(mid == low || mid == high){
                return Math.min(nums[low], nums[high]);
            }
        }
        return nums[low];
    }
}
