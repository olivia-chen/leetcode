public class Solution {//find the peak value first, then find the target
    public int search(int[] nums, int target) {
        int low = 0;
        int high = nums.length-1;
        if(nums.length == 0)
        return -1;
        if(nums.length == 1){
            return target == nums[0]? 0:-1;
        }
        if(nums[0] > nums[nums.length-1]){
            int peakIndex = findPeak(nums);
            if(target < nums[0]){
                low = peakIndex + 1;
            }else if(target > nums[0]){
                high = peakIndex;
            }else{
                return 0;
            }
        }
        while(low < high){
            int mid = low + (high - low)/2;
            if(target == nums[mid]){
                return mid;
            }else if(target > nums[mid]){
                low = mid+1;
            }else{
                high = mid;
            }
        }
        if(low == high){
            if(nums[high] == target){
                return high;
            }
        }
        return -1; 
    }
    private int findPeak(int[] nums){
        int k = nums[0];
        int low = 1; 
        int high = nums.length-1;
        while(low < high){
            int mid = low + (high - low)/2;
            if(k < nums[mid] && k > nums[mid+1]){
                return mid;
            }else if(k < nums[mid]){
                low = mid+1;
            }else if(k > nums[mid]){
                high = mid;
            }
        }
        return 0;
    } 
}
