public class Solution {
    public boolean wordPattern(String pattern, String str) {
        Map<Character, String> map = new HashMap<Character, String>();
        Set<String> set = new HashSet<String>();
        int j = 0;
        for(int i = 0; i < pattern.length(); i++){
            String temp = "";
            int k = j;
            while(k < str.length() && str.charAt(k) == ' '){
                k++;
            }
            j = k;
            while(j < str.length() && str.charAt(j) != ' '){
                temp = temp + str.charAt(j);
                j++;
            }
            if(!temp.equals("")){
                set.add(temp);
            }
            if(map.containsKey(pattern.charAt(i))){
                if(!map.get(pattern.charAt(i)).equals(temp)){
                    return false;
                }
            }else{
                map.put(pattern.charAt(i), temp);
            }
        }
        if(map.size() != set.size()){
            return false;
        }
        String temp = "";
        int k = j;
        while(k < str.length() && str.charAt(k) == ' '){
            k++;
        }
        j = k;
        while(j < str.length() && str.charAt(j) != ' '){
            temp = temp + str.charAt(j);
            j++;
        }
        if(!temp.equals("")){
            return false;
        }
        return true;
    }
}
